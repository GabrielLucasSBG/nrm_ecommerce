// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id                BigInt   @id @default(autoincrement())
  name              String   @db.VarChar(255)
  email             String   @unique @db.VarChar(255)
  email_verified_at DateTime @db.Timestamp()
  password          String   @db.VarChar(255)
  remember_token    String   @db.VarChar(100)
  created_at        DateTime @db.Timestamp()
  updated_at        DateTime @db.Timestamp()
  is_admin          Int      @db.TinyInt
}

model Products {
  id          BigInt        @id @default(autoincrement())
  title       String        @db.VarChar(2000)
  image       String        @db.VarChar(2000)
  description String        @db.LongText()
  price       Decimal       @db.Decimal(10, 2)
  created_by  BigInt
  updated_by  BigInt
  deleted_by  BigInt
  created_at  DateTime      @db.Timestamp()
  updated_at  DateTime      @db.Timestamp()
  deleted_at  DateTime      @db.Timestamp()
  published   Int           @db.TinyInt
  Cart_items  Cart_items[]
  Order_items Order_items[]
}

model Cart_items {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt
  product    Products @relation(fields: [product_id], references: [id])
  product_id BigInt
  quantity   Int
  created_at DateTime @db.Timestamp()
  updated_at DateTime @db.Timestamp()
}

model Orders {
  id          BigInt        @id @default(autoincrement())
  total_price Decimal       @db.Decimal(20, 2)
  status      String        @db.VarChar(45)
  created_by  BigInt
  updated_by  BigInt
  created_at  DateTime      @db.Timestamp()
  updated_at  DateTime      @db.Timestamp()
  Payments    Payments[]
  Order_items Order_items[]
}

model Payments {
  id         BigInt   @id @default(autoincrement())
  order      Orders   @relation(fields: [order_id], references: [id])
  order_id   BigInt
  amount     Decimal  @db.Decimal(10, 2)
  status     String   @db.VarChar(45)
  type       String   @db.VarChar(45)
  created_by BigInt
  updated_by BigInt
  created_at DateTime @db.Timestamp()
  updated_at DateTime @db.Timestamp()
  session_id String   @db.VarChar(255)
}

model Order_items {
  id         BigInt   @id @default(autoincrement())
  order_id   BigInt
  order      Orders   @relation(fields: [order_id], references: [id])
  product_id BigInt
  product    Products @relation(fields: [product_id], references: [id])
  quantity   Int
  unit_price Decimal  @db.Decimal(8, 2)
  created_at DateTime @db.Timestamp()
  updated_at DateTime @db.Timestamp()
}

model Order_details {
  id           BigInt   @id @default(autoincrement())
  first_name   String   @db.VarChar(255)
  last_name    String   @db.VarChar(255)
  phone        String   @db.VarChar(255)
  address      String   @db.VarChar(255)
  city         String   @db.VarChar(255)
  state        String   @db.VarChar(45)
  zipcode      String   @db.VarChar(45)
  country_code String   @db.VarChar(3)
  created_at   DateTime @db.Timestamp()
  updated_at   DateTime @db.Timestamp()
}

model Customers {
  id                 BigInt               @id @default(autoincrement())
  first_name         String               @db.VarChar(255)
  last_name          String               @db.VarChar(255)
  phone              String               @db.VarChar(255)
  status             String               @db.VarChar(45)
  created_at         DateTime             @db.Timestamp()
  updated_at         DateTime             @db.Timestamp()
  created_by         BigInt
  updated_by         BigInt
  Customer_addresses Customer_addresses[]
}

model Customer_addresses {
  id           BigInt    @id @default(autoincrement())
  type         String    @db.VarChar(45)
  address      String    @db.VarChar(255)
  city         String    @db.VarChar(255)
  state        String    @db.VarChar(45)
  zipcode      String    @db.VarChar(45)
  customer_id  BigInt
  customer     Customers @relation(fields: [customer_id], references: [id])
  country_code String    @db.VarChar(3)
  country      Countries @relation(fields: [country_code], references: [code])
  created_at   DateTime  @db.Timestamp()
  updated_at   DateTime  @db.Timestamp()
}

model Countries {
  code               String               @id @db.VarChar(3)
  name               String               @db.VarChar(255)
  state              Json
  Customer_addresses Customer_addresses[]
}

model Password_resets {
  token      String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  created_at DateTime @db.Timestamp()
}
