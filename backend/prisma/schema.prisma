generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart_items {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt
  product_id BigInt
  quantity   Int
  created_at DateTime @db.Timestamp(0)
  updated_at DateTime @db.Timestamp(0)
  products   products @relation(fields: [product_id], references: [id], map: "Cart_items_product_id_fkey")

  @@index([product_id], map: "Cart_items_product_id_fkey")
}

model countries {
  code               String               @id @db.VarChar(3)
  name               String               @db.VarChar(255)
  state              Json
  customer_addresses customer_addresses[]
}

model customer_addresses {
  id           BigInt    @id @default(autoincrement())
  type         String    @db.VarChar(45)
  address      String    @db.VarChar(255)
  city         String    @db.VarChar(255)
  state        String    @db.VarChar(45)
  zipcode      String    @db.VarChar(45)
  customer_id  BigInt
  country_code String    @db.VarChar(3)
  created_at   DateTime  @db.Timestamp(0)
  updated_at   DateTime  @db.Timestamp(0)
  countries    countries @relation(fields: [country_code], references: [code], map: "Customer_addresses_country_code_fkey")
  customers    customers @relation(fields: [customer_id], references: [id], map: "Customer_addresses_customer_id_fkey")

  @@index([country_code], map: "Customer_addresses_country_code_fkey")
  @@index([customer_id], map: "Customer_addresses_customer_id_fkey")
}

model customers {
  id                 BigInt               @id @default(autoincrement())
  first_name         String               @db.VarChar(255)
  last_name          String               @db.VarChar(255)
  phone              String               @db.VarChar(255)
  status             String               @db.VarChar(45)
  created_at         DateTime             @db.Timestamp(0)
  updated_at         DateTime             @db.Timestamp(0)
  created_by         BigInt
  updated_by         BigInt
  customer_addresses customer_addresses[]
}

model order_details {
  id           BigInt   @id @default(autoincrement())
  first_name   String   @db.VarChar(255)
  last_name    String   @db.VarChar(255)
  phone        String   @db.VarChar(255)
  address      String   @db.VarChar(255)
  city         String   @db.VarChar(255)
  state        String   @db.VarChar(45)
  zipcode      String   @db.VarChar(45)
  country_code String   @db.VarChar(3)
  created_at   DateTime @db.Timestamp(0)
  updated_at   DateTime @db.Timestamp(0)
}

model order_items {
  id         BigInt   @id @default(autoincrement())
  order_id   BigInt
  product_id BigInt
  quantity   Int
  unit_price Decimal  @db.Decimal(8, 2)
  created_at DateTime @db.Timestamp(0)
  updated_at DateTime @db.Timestamp(0)
  orders     orders   @relation(fields: [order_id], references: [id], map: "Order_items_order_id_fkey")
  products   products @relation(fields: [product_id], references: [id], map: "Order_items_product_id_fkey")

  @@index([order_id], map: "Order_items_order_id_fkey")
  @@index([product_id], map: "Order_items_product_id_fkey")
}

model orders {
  id          BigInt        @id @default(autoincrement())
  total_price Decimal       @db.Decimal(20, 2)
  status      String        @db.VarChar(45)
  created_by  BigInt
  updated_by  BigInt
  created_at  DateTime      @db.Timestamp(0)
  updated_at  DateTime      @db.Timestamp(0)
  order_items order_items[]
  payments    payments[]
}

model password_resets {
  token      String   @db.VarChar(255)
  email      String   @unique(map: "Password_resets_email_key") @db.VarChar(255)
  created_at DateTime @db.Timestamp(0)
}

model payments {
  id         BigInt   @id @default(autoincrement())
  order_id   BigInt
  amount     Decimal  @db.Decimal(10, 2)
  status     String   @db.VarChar(45)
  type       String   @db.VarChar(45)
  created_by BigInt
  updated_by BigInt
  created_at DateTime @db.Timestamp(0)
  updated_at DateTime @db.Timestamp(0)
  session_id String   @db.VarChar(255)
  orders     orders   @relation(fields: [order_id], references: [id], map: "Payments_order_id_fkey")

  @@index([order_id], map: "Payments_order_id_fkey")
}

model products {
  id          BigInt        @id @default(autoincrement())
  title       String        @db.VarChar(2000)
  image       String        @db.VarChar(2000)
  description String        @db.LongText
  price       Decimal       @db.Decimal(10, 2)
  created_by  BigInt
  updated_by  BigInt
  deleted_by  BigInt
  created_at  DateTime      @db.Timestamp(0)
  updated_at  DateTime      @db.Timestamp(0)
  deleted_at  DateTime      @db.Timestamp(0)
  published   Int           @db.TinyInt
  cart_items  cart_items[]
  order_items order_items[]
}

model users {
  id                Int            @id @default(autoincrement())
  name              String         @db.VarChar(255)
  email             String         @unique(map: "Users_email_key") @db.VarChar(255)
  email_verified_at DateTime?      @db.Timestamp(0)
  password          String         @db.VarChar(255)
  remember_token    String?        @db.VarChar(100)
  created_at        DateTime?      @default(now()) @db.Timestamp(0)
  updated_at        DateTime?      @default(now()) @db.Timestamp(0)
  is_admin          Int?           @default(0) @db.TinyInt
  refreshtoken      RefreshToken[]
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  user_id     Int
  Users       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}
